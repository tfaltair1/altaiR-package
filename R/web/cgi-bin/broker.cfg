#
# This is a sample broker.cfg file
# It shows all allowed configuration directives.
# 
# The syntax of the file is as follows:
#  Comment lines start with a #
#  Other lines must be of the form 
#    directive values
#  where values is one or more space separated words, depending on the 
#  particular directive. Values that contain words can be surrounded with
#  either single or double quotes. To include a single quote within a single
#  quoted string, or a double quote within a double quoted string, 
#  preceed it by a backslash ('\'). 
#  A backslash can be included in the string by typing a double backslash ('\\').
#  A single quote can be included within a double quoted string and vice versa 
#  without escaping. 
#  Long directives may be split across multiple lines using a plus sign ('+') as 
#  the last character on the line. Long strings may be split across multiple lines
#  in this way, as shown in the following example:
# 
#   directive "long string value +
#         continues on next line"
#  
#  Note that the whitespace at the start of the second line in this example 
#  becomes part of the string -- the two lines are joined at the plus sign as if
#  it was written as one long line.
#

# Sets the display name of the person responsible for administering the 
# broker. This name will appear at the bottom of various pages produced
# by the broker, for example those that are generated in response to errors.
Administrator "Administrator Name"

# Sets the email address of the person responsible for administering the
# broker. Appears along with the Administrator name on various pages generated by the broker.
AdministratorMail "admin@host"

# Names the default service to use if no _SERVICE field is included in a 
# query. Defaults to "default"
# DefaultService default

# Sets a password that must be specified in order to access the 
# Application Broker Services page (_DEBUG=4)
# BrokerPassword secret

# Sets the default value to use if no _DEBUG field is included in the query.
# Can either be a numeric value formed by adding up one or more of the 
# fields below, or can be a space or comma separated list of the keywords.
# The default is 2.
# This may be overridden on a service basis by the ServiceDebug directive.
# Valid debug field values are
# FIELDS     1       Displays the names and values of any fields 
#                    passed to the Application Server
# TIME       2       Prints the elapsed time for each request at the bottom 
#                    of the output
# SERVICES   4       Lists the definitions of all services defined in this
#                    configuration file and allows each to be tested.
#            8       Causes the application server to skip actual processing 
#                    of the requested program
# DUMP       16      Displays the output from the Application Server in 
#                    hexadecimal format.
#            32      Displays the "powered by WPS" logo after the output of 
#                    the requested program.
# LOG        128     Displays the execution log generated by the application server
#                    while processing the requested program.
# ECHO       1024    
# ENV        16384   Displays a selection of broker environment variables, but does
#                    not otherwise process the request.

#Debug 2

# DebugMask sets the debug bits that the user is allowed to include in the 
# _DEBUG field. This allows certain debug fields to be disabled which might 
# otherwise cause a security risk.
# The value should be the sum of all the debug fields that are to be allowed
# to be requested via the _DEBUG request parameter. This does not effect the 
# value set via the Debug directive above.
# The default value is 32767 (all debug bits are allowed).
# This may be overridden on a service basis by the ServiceDebugMask directive.
#DebugMask 32767

# The HTTP methods that are supported by the boker. Valid values are 
# get and post. 
# Defaults to get and post
# Allow get post

# Specifies the full HTML document to be generated in the event of 
# not being able to establish a connection to an application server.
# This is only used for "user" programs, and not for administrator
# programs such as "ping".
# This may be overridden on a service basis by the ServiceConnectionError directive.
#ConnectionError "+
# <html> +
# <head> +
# <title>Application Error</title> +
# </head> +
# <body> +
# <h1>Application not available</h1> +
# The application is not available. Please contact the administrator +
# </body> +
# </html>"


# The URL of the image file to use in the "Powered by Altair SLC" section
# that appears at the bottom of the application server output.
# WPSPoweredLogo,SASPoweredLogo are accepted as aliases for this directive.
# This may be overridden on a service basis with the 
# ServiceSLCPoweredLogo directive.
#SLCPoweredLogo "logo.gif"

# The alternate text used for the "Powered by Altair SLC" image
# WPSPoweredAlt,SASPoweredAlt are accepted as aliases for this directive.
# The default is "Altair SLC"
# This may be overridden on a service basis with the 
# ServiceSLCPoweredAlt directive.
#SLCPoweredAlt "Altair SLC"

# The destination URL to be used for the anchor surrounding the 
# "Powered by Altair SLC" image.
# WPSPoweredHref,SASPoweredHref are accepted as aliases for this directive.
# The default value is "https://community.altair.com"
# This may be overridden on a service basis with the 
# ServiceSLCPoweredHref directive.
#SLCPoweredHref "https://community.altair.com"

# The destination frame to be used for the anchor surrounding the 
# "Powered by Altair SLC" image.
# WPSPoweredTarget,SASPoweredTarget are accepted as aliases for this directive.
# The default value is "altairslc"
# This may be overridden for a particular service with the 
# ServiceSLCPoweredTarget directive.
#SLCPoweredTarget altairslc

# The PrependFile directive gives the path of a file the contents of 
# which are prepended to the front of any response that is received from the 
# application server. This is not a URL, but a file local to the 
# application broker.
# PrependFile "local filename"

# The AppendFile directive gives the path of a file the contents of 
# which are appended to the end of any response that is received from the 
# application server. This is not a URL, but a file local to the 
# application broker.
# AppendFile "local filename"

# Specifies the IP address and port number of the Load Manager 
# to use for Pool and Socket services. The Load manager is optional
# for Socket services and required for Pool services.
# May be overridden on a service basis with the 
# ServiceLoadManager directive.
#LoadManager localhost:5555

# Specifies the timeout in seconds to wait for a response from the 
# application server when a program has been requested.
# The default is 60 seconds. 
# May be overridden on a service basis with the 
# ServiceTimeout directive.
#Timeout 60

# The Export directive causes a broker environment variable to 
# be passed to the application server as if it had been specified
# as a request parameter.
# The variables specified with the Export directive will be 
# available to all services. Additional variables may be specified
# for a particular service with the ServiceExport directive.
# 
# For each Export directive the name of an environment variable must
# be specified, optionally followed by an alternative name under which 
# that variable will be made available to the service. 
#
# For example:
# Export GATEWAY_INTERFACE _GATEWAY
# causes the GATEWAY_INTERFACE broker environment variable to be passed
# to the application server under the name _GATEWAY.
# Export SERVER_NAME
# causes the SERVER_NAME broker environment variable to be passed
# to the application server under the name SERVER_NAME.
Export REMOTE_ADDR _RMTADDR
# Export the IP address of the host which called the broker

# The Set directive causes a specific value to be passed to the 
# application server. Variables defined using the Set directive
# are passed to all services. Additional variables may be specified
# for a particular service with the ServiceSet directive.
#
#Set VARNAME "Value"

# The SocketService directive starts the definition of a "Socket" service.
# The name of the service must be given, optionally followed by a short 
# description. The short description is used when reporting the list of 
# services.
# The application servers whose host names and ports are defines using the 
# Server and Port directives must be started externally to the broker. The
# management of their lifetime is not the repsonsibility of the broker or
# load manager. A PoolService provides more dynamic control over the 
# application servers in response to varying load.
#
# Following the SocketService directive, the following directives may appear:
#
# SocketDescription       Specifies a longer description of the service. This is 
#                         optional.
# Server                  Specifies the names of one or more application server
#                         hosts. Either DNS names or IP addresses can be specified. 
#                         See the examples below for how this directive and the 
#                         Port directive interact.
#                         The DNS/IP can be followed by an optional weighting to aide
#                         load balancing algorithms.
# Port                    Specifies the port number or numbers of the application servers.
#                         Port numbers can either be specified individually (e.g 5001 5003 5005),
#                         or a range of numbers can be given (e.g 5001-5004).
#                         See the examples below for how this directive and the 
#                         Server directive interact.
# ServiceAdmin            Specifies the name of the administrator for this service. 
#                         This is optional, and if not specified the value given in 
#                         the Administrator directive is used.
# ServiceAdminMail        Specifies the email address of the administrator for 
#                         this service. This is optional, and if not specified the 
#                         value given in the AdministratorMail directive is used.
# ServiceDebug            Overrides the Debug directive for this service.
# ServiceDebugMask        Overrides the DebugMask directive for this service.
# ServiceSLCPoweredLogo   Overrides the SLCPoweredLogo directive for this service.
# ServiceSLCPoweredAlt    Overrides the SLCPoweredAlt directive for this service.
# ServiceSLCPoweredHref   Overrides the SLCPoweredHref directive for this service.
# ServiceSLCPoweredTarget Overrides the SLCPoweredTarget directive for this service.
# ServiceTimeout          Overrides the Timeout directive for this service.
# ServiceExport           Adds additional environment variable exports for this service
#                         See the description of the Export directive.
# ServiceSet              Sets additional variables for this service
#                         See the description of the Set directive.
# ServiceLoadManager      Overrides the LoadManager directive for this service.
# FullDuplex              This directive is allowed for compatibility, but is otherwise ignored.
#
# The Server and Port directives are combined in the following way. 
# The port numbers on a Port directive and combined with the host names on the
# preceeding set of Server directives in all possible ways to form the set of 
# socket addresses. This is best explained by way of examples:
#
# Server localhost
# Port 5001
# Specifies the address of one application server, localhost:5001
#
# Server localhost
# Port 5001-5005
# Specifies the addresses of 5 application servers, localhost:5001, localhost:5002
# localhost:5003, localhost:5004, localhost:5005
#
# Server host1 host2
# Port 5001
# Specifies the addresses of 2 application servers, host1:5001 and host2:5001
#
# Server host1
# Server host2
# Port 5001
# Equivalent to the preceeding example, specifying 2 application servers, 
# host1:5001 and host2:5001

# Server host1*2
# Server host2*1
# Port 5001
# Equivalent to the preceeding example, specifying 2 application servers, 
# but weights are applied so host1 is twice as likely to receive requests as host2
#
# Server host1
# Server host2
# Port 5001
# Port 5002
# Specifies the addresses of 4 application servers, host1:5001 and host2:5001,
# host1:5002 and host2:5002
#
# If the address of more than one application server is specified, then specifying
# a Load Manager is recommended, either using the LoadManager or ServiceLoadManager
# directives. If no Load Manager is specified then the broker will choose an application
# server at random to send the request to. 
#
SocketService default "The default service"
ServiceDescription "Default service used for samples"
ServiceAdmin "Your Name"
ServiceAdminMail "you@company.com"
Server localhost
Port 5001

# The PoolService directive starts the definition of a "Pool" service.
# The definition of a PoolService is much the same as the definition of
# a SocketService. The primary difference is that in the case of the 
# Socket service it is assumed that the application servers are running 
# permanently and their management not the responsibility of the 
# broker or load manager.
# In the case of the PoolService, application servers will be started up 
# automatically as necessary by the load manager, and closed down again 
# if idle. As such the Server and Port directives only specify the 
# addresses of potential application servers, not actual application servers.
#
# In addition to the directives which are valid for the SocketService,
# the following directives are supported.
#
# ServiceLoadManager A Load Manager must be specified for a PoolService,
#                    either using a ServiceLoadManager directive or a 
#                    global LoadManager directive.
# IdleTimeout        Specifies the amount of time (in minutes) that an 
#                    application server is allowed to remain idle before it 
#                    shut down by the Load Manager.
# LaunchCommand      Specifies the command line to be used for locally launching 
#                    a new application server. The command line should end in 
#                    a SYSPARM command line option, as the load manager will 
#                    append a string containing options to be passed to the 
#                    application server using the SYSPARM command line option.
# SpawnerPort        Optionally specifies the port number on which it is assumed
#                    a spawner is listening. When this is specified the load 
#                    manager starts all application services by contacting the
#                    spawner on the same host on which the the load manager
#                    needs to start an application server. Without a spawner
#                    the load manager can only launch local application servers.
#                    When launching local application servers the spawner
#                    gives the extra capacility of being able to launch 
#                    application servers that will run under a specified 
#                    username, which may be different to that under which the 
#                    load manager itself is running.
#                    The spawner must be running on the same port on each host. This is not 
#                    combined with the Server directive in the same way that the Port 
#                    directive is.
# Username           This directive is optional, and is only valid if a SpawnerPort
#                    is specified. It specifies the username under which any application
#                    servers launched by the spawner should be run. 
#                    Currenty encrypting the username is not supported.
# Password           This directive is optional, and is only valid if a SpawnerPort
#                    is specified. It specifies the password for the username specified 
#                    by the Username directive.
#                    Currenty encrypting the password is not supported and to it must appear in 
#                    plain text.

#PoolService default "Sample service defining a pool of application servers"
#Server host1
#Port 5001-5005
#ServiceLoadManager host1:5555
#SpawnerPort 7777
